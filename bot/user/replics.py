from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
import db
import config
from aiogram.fsm.context import FSMContext

replic_startCommand = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å'
replic_wrong = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑'
replic_correct = '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!'
replic_paymentHave = '–ö—É—Ä—Å –¥–µ—Ç–∞–ª–∏–ë–æ—Ç. –ù–∏–∂–µ –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏'

async def replic_freeVideo_show_markup(video_id: int):
    video = await db.free_videos.getVideo(video_id)
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å', url=video.video_url)]
    ])


# [{question, answers: ['1', '2', '3'], correct_answer: id_answers}]}]
async def replic_show(state: FSMContext):
    state_data = (await state.get_data())['state_data']
    if state_data:
        data = state_data[0]
        if data['type'] == 'video':
            video = await db.free_videos.getVideo(data['data'].video_id)
            state_data.pop(0)
            await state.update_data(state_data=state_data)
            return 'video', video.message_chat_id, video.message_message_id, InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å', url=video.video_url)],
                [InlineKeyboardButton(text='‚è©Ô∏è –î–∞–ª–µ–µ', callback_data=f'next.{data["data"].video_id}')]
            ])
        else:
            keyboard = []
            print(data)
            for i, button in enumerate(data['data']['answers']):
                if i == data['data']['correct_answer']:
                    keyboard.append([InlineKeyboardButton(text=button, callback_data=f'correct')])
                else:
                    keyboard.append([InlineKeyboardButton(text=button, callback_data=f'wrong')])
            state_data.pop(0)
            await state.update_data(state_data=state_data)
            return 'test', None, data['data']['question'], InlineKeyboardMarkup(inline_keyboard=keyboard)
    else:
        return 'end', None, f'üòÑ –û—Ç–ª–∏—á—á–Ω–æ! –í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –±–µ—Å–ª–ø–∞—Ç–Ω—ã–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏!\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫—É—Ä—Å—É, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å {config.price} —Ä—É–±–ª–µ–π.', InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='–Ø –æ–ø–ª–∞—Ç–∏–ª', callback_data='paid')]
        ])



